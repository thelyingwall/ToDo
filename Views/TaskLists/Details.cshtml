@model ToDo.ViewModels.TaskListViewModel
@inject IHttpContextAccessor context;
@{
    string queryString = "";
    @if ((Context.Request.QueryString).Value.Contains("page"))
    {
        queryString = Context.Request.QueryString + "&page=";
    }
    else
    {
        queryString = Context.Request.QueryString.ToString();
    }

}
@{
    ViewData["Title"] = "Szczegóły";

}
<div class=" p-5" style="border-radius:5vh;">
    <partial name="_Background" />
    <div class="no-gradient">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h1> @Html.DisplayFor(modelItem => Model.TaskList.Title)</h1>

            <a asp-action="Index" asp-route-id="@Model?.TaskList.TaskListId">
                <i style="text-decoration:none;color:black;" class="bi bi-x-lg"></i>
            </a>
        </div>

        <div>
            <p>
                <a data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample" class="toggle-icon">
                    Wyświetl szczegóły
                    <i class="bi bi-chevron-down"></i>
                </a>
            </p>
            <div class="collapse" id="collapseExample">
                <p>
                    <b>Data utworzenia:</b> @Html.DisplayFor(model => model.TaskList.CreateDate)<br />
                    <b>Kategoria listy:</b> @Html.DisplayFor(model => model.TaskList.Category.CategoryName)<br />
                    @Html.DisplayFor(model => model.TaskList.Description)
                </p>
            </div>

            <div class="row g-0 row-cols-xs-1 row-cols-xxs-1">
                <div class="col-sm-6 col-md-8">
                    <a asp-action="Edit" asp-route-id="@Model?.TaskList.TaskListId" class="btn btn-outline-dark">Edytuj</a>
                    <a asp-action="Delete" asp-route-id="@Model?.TaskList.TaskListId" class="btn btn-outline-danger">Usuń</a>
                </div>
                <div class="col-6 col-md-4 text-end"><a href="@Url.Action("Create", "Tasks", new { taskListId = Model.TaskList.TaskListId })" class="btn btn-outline-dark">Dodaj zadanie</a></div>
            </div><br />
            <div class="progress" role="progressbar" aria-label="Success example" aria-valuemin="0" aria-valuemax="100" style="height:12px;background-color:white; border-radius:50px;border: 1px solid;">
                <div class="progress-bar bg-success" style="width: @Model?.progress%; background-color:black !important;font-size:12px;"> @Model?.progress%</div>
            </div>
            <br />
            @using (Html.BeginForm(FormMethod.Get))
            {
                <div class="text-end">
                    Szukaj zadania: @Html.TextBox("SearchString")
                    <input type="submit" class="btn btn-dark" value="Szukaj" />
                </div>
            }<br />
            <table class="table">
                <thead>
                    <tr>
                        <th>
                        </th>
                        <th>

                            @Html.ActionLink("Tytuł", "Details", new {
                            id=Model.TaskList.TaskListId,
                            page = Model.Tasks.CurrentPage,
                            searchString = Context.Request.Query["searchString"],
                            sortOrder = ViewBag.TitleSortParm })
                        </th>
                        <th>
                            @Html.ActionLink("Priorytet", "Details", new {
                            id=Model.TaskList.TaskListId,
                            page = Model.Tasks.CurrentPage,
                            searchString = Context.Request.Query["searchString"],
                            sortOrder = ViewBag.PrioritySortParm })
                        </th>
                        <th>
                            @Html.ActionLink("Termin ukończenia", "Details", new {
                            id=Model.TaskList.TaskListId,
                            page = Model.Tasks.CurrentPage,
                            searchString = Context.Request.Query["searchString"],
                            sortOrder = ViewBag.DeadlineSortParm })
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Tasks.Items)
                    {
                        <tr>

                            <td>
                                @using (Html.BeginForm("Check", "Tasks", new { id = item.TaskId }, FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()

                                    <button type="submit" style="border: none; background: none; padding: 0; margin: 0; font: inherit; color: inherit; cursor: pointer;">
                                        <i class="@(item.IsDone==true ? "bi bi-check-square-fill" : "bi bi-square")"></i>
                                    </button>
                                }

                            </td>
                            <td class="@(item.IsDone==true ? "strikethrough" : "")">
                                <a href="@Url.Action("Details", "Tasks", new { id =item.TaskId })" style="text-decoration:none;color:black;">@Html.DisplayFor(modelItem => item.Title)</a>
                            </td>
                            <td class="@(item.IsDone==true ? "strikethrough" : "")">
                                @Html.DisplayFor(modelItem => item.Priority.PriorityName)
                            </td>
                            <td class="@(item.IsDone==true ? "strikethrough" : "")">
                                @Html.DisplayFor(modelItem => item.Deadline)
                                @{
                                    if (item.IsDone != true && item.Deadline <= DateTime.Today.AddDays(1))
                                    {
                                        <span><i class="bi bi-exclamation-lg text-danger"></i></span>
                                    }
                                }

                            </td>

                            <td>
                                <a href="@Url.Action("Delete", "Tasks", new { id =item.TaskId })"> <i style="color:black;" class="bi bi-trash"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            <div class="pagination justify-content-center">
                <ul class="pagination" style="background-color:transparent;">
                    <li class="page-item @(Model.Tasks.CurrentPage==0 ? "disabled" : "")">
                        <a class="page-link" aria-disabled="true" href="@Url.Action("Details", new {
                                id=Model.TaskList.TaskListId,
                                page = Model.Tasks.CurrentPage - 1,
                                searchString = Context.Request.Query["searchString"],
                                sortOrder = Context.Request.Query["sortOrder"]
                                })"><i class="bi bi-chevron-left"></i></a>
                    </li>
                    @for (var i = 0; i <= Model.Tasks.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Tasks.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Details", new {
                                id=Model.TaskList.TaskListId,
                                page = i,
                                searchString = Context.Request.Query["searchString"],
                                sortOrder = Context.Request.Query["sortOrder"]
                                })">
                                @{
                                    int temp = i + 1;
                                } @temp
                            </a>
                        </li>
                    }
                    <li class="page-item @(Model.Tasks.CurrentPage==Model.Tasks.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Details", new {
                                id=Model.TaskList.TaskListId,
                                page = Model.Tasks.CurrentPage + 1,
                                searchString = Context.Request.Query["searchString"],
                                sortOrder = Context.Request.Query["sortOrder"]
                                })"><i class="bi bi-chevron-right"></i></a>
                    </li>
                </ul>
            </div>
            <p class="text-center"><b>Znaleziono @Model.Tasks.TotalItems zadań</b></p>
        </div>
    </div>
</div>

<script>
    var collapseButton = document.querySelector('.toggle-icon');
    var icon = collapseButton.querySelector('i');

    collapseButton.addEventListener('click', function () {
        if (icon.classList.contains('bi-chevron-down')) {
            icon.classList.remove('bi-chevron-down');
            icon.classList.add('bi-chevron-up');
        } else {
            icon.classList.remove('bi-chevron-up');
            icon.classList.add('bi-chevron-down');
        }
    });
</script>