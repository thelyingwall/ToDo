@model ToDo.ViewModels.TaskListViewModel

@{
    ViewData["Title"] = "Edycja";
}

<h1>Edycja</h1>

<h4>Lista zadań</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="@Model.TaskList.TaskListId" />
            <div class="form-group">
                <label asp-for="@Model.TaskList.Title" class="control-label">Tytuł</label>
                <input asp-for="@Model.TaskList.Title" class="form-control" />
                <span asp-validation-for="@Model.TaskList.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.TaskList.Description" class="control-label">Opis</label>
                <textarea asp-for="@Model.TaskList.Description" class="form-control" rows="5"></textarea>
                <span asp-validation-for="@Model.TaskList.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Kategoria</label>
                <select name="CategoryId" class="form-select" asp-for="CategoryId" asp-items="@Model.Categories">
                </select>
            </div>
            <div class="form-group">
                <br />
                <input type="submit" value="Zapisz" class="btn btn-outline-dark" />
                <a href="javascript:history.back()" class="btn btn-outline-dark">Powrót</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
